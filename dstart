#!/bin/bash

CMD=$0
[ "${CMD:0:1}" != "/" ] && CMD="$PWD/$CMD"
DIR=$(dirname "$CMD")
cd "$DIR"

# Unnecessary if we aren't using fibers
# chooseBinary() {
# 	# Below, choose correct binary modules for our architecture
#     v=$(uname -m)
# 	[ "${v:0:4}" != "armv" ] && NODE=node && return
# 
#         if [ "$v" = "armv6l" ]; then
#                 dir="$HOME/node_modules/fibers/bin/linux-arm-48"
#                 if [ ! -d "$dir" -a -f linux-arm-48_fibers.node ]; then
#                         mkdir -p "$dir" 
#                         ln linux-arm-48_fibers.node "$dir/fibers.node"
#                 fi
#                 NODE="$HOME/node-armv6l"
#         elif [ "$v" = "armv7l" ]; then
#                 dir="$HOME/node_modules/fibers/bin/linux-arm-51"
#                 if [ ! -d "$dir" -a -f linux-arm-51_fibers.node ]; then
#                         mkdir -p "$dir"
#                         ln linux-arm-51_fibers.node "$dir/fibers.node"
#                 fi
#         fi
# }

clear

# Install dependencies
[ ! -d node_modules/ ] && ./scripts/install-deps.sh

# Symlink to Android environment sdcard (if found)
for d in /media/removable/sdcard/*; do
	base=$(basename "$d")
	tgt="sdcard/$base"
	[ ! -d "$tgt" -a ! -L "$tgt" ] && ln -s "$d" "$tgt"
done
for d in /media/removable/sdcard/DroidScript/*; do
	[ ! -d "$d" ] && continue # Only link directories (not files)
	base=$(basename "$d")
	tgt="sdcard/DroidScript/$base"
	[ ! -d "$tgt" -a ! -L "$tgt" ] && ln -s "$d" "$tgt"
done

echo "Starting $APP..."
NODE=node
#chooseBinary
while [ true ]; do
    "$NODE" dsmain.js
    sleep 5
    clear
    echo "Restarting $APP..."
done
